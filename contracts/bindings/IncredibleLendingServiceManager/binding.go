// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractIncredibleLendingServiceManager

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// IBLSSignatureCheckerNonSignerStakesAndSignature is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerNonSignerStakesAndSignature struct {
	NonSignerQuorumBitmapIndices []uint32
	NonSignerPubkeys             []BN254G1Point
	QuorumApks                   []BN254G1Point
	ApkG2                        BN254G2Point
	Sigma                        BN254G1Point
	QuorumApkIndices             []uint32
	TotalStakeIndices            []uint32
	NonSignerStakeIndices        [][]uint32
}

// IBLSSignatureCheckerQuorumStakeTotals is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerQuorumStakeTotals struct {
	SignedStakeForQuorum []*big.Int
	TotalStakeForQuorum  []*big.Int
}

// ContractIncredibleLendingServiceManagerMetaData contains all meta data concerning the ContractIncredibleLendingServiceManager contract.
var ContractIncredibleLendingServiceManagerMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"contractIBLSRegistryCoordinatorWithIndices\",\"name\":\"_registryCoordinator\",\"type\":\"address\"},{\"internalType\":\"contractISlasher\",\"name\":\"_slasher\",\"type\":\"address\"},{\"internalType\":\"contractIIncredibleLendingTaskManager\",\"name\":\"_incredibleLendingTaskManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contractIPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contractIPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"PauserRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"blsPubkeyRegistry\",\"outputs\":[{\"internalType\":\"contractIBLSPubkeyRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"referenceBlockNumber\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint32[]\",\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point[]\",\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point[]\",\"name\":\"quorumApks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBN254.G2Point\",\"name\":\"apkG2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point\",\"name\":\"sigma\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[]\",\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[][]\",\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\"}],\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"name\":\"nonSignerStakesAndSignature\",\"type\":\"tuple\"}],\"name\":\"checkSignatures\",\"outputs\":[{\"components\":[{\"internalType\":\"uint96[]\",\"name\":\"signedStakeForQuorum\",\"type\":\"uint96[]\"},{\"internalType\":\"uint96[]\",\"name\":\"totalStakeForQuorum\",\"type\":\"uint96[]\"}],\"internalType\":\"structIBLSSignatureChecker.QuorumStakeTotals\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operatorAddr\",\"type\":\"address\"}],\"name\":\"freezeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incredibleLendingTaskManager\",\"outputs\":[{\"internalType\":\"contractIIncredibleLendingTaskManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contractIPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryCoordinator\",\"outputs\":[{\"internalType\":\"contractIRegistryCoordinator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"setPauserRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slasher\",\"outputs\":[{\"internalType\":\"contractISlasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeRegistry\",\"outputs\":[{\"internalType\":\"contractIStakeRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point\",\"name\":\"apk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBN254.G2Point\",\"name\":\"apkG2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point\",\"name\":\"sigma\",\"type\":\"tuple\"}],\"name\":\"trySignatureAndApkVerification\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"pairingSuccessful\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"siganatureIsValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x6101206040523480156200001257600080fd5b5060405162002ea738038062002ea7833981016040819052620000359162000246565b828281806001600160a01b03166080816001600160a01b031681525050806001600160a01b031663683048356040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000091573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b791906200029a565b6001600160a01b031660a0816001600160a01b031681525050806001600160a01b0316633561deb16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200010f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013591906200029a565b6001600160a01b0390811660c052821660e05250620001536200016b565b50506001600160a01b03166101005250620002c19050565b600054610100900460ff1615620001d85760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156200022b576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146200024357600080fd5b50565b6000806000606084860312156200025c57600080fd5b835162000269816200022d565b60208501519093506200027c816200022d565b60408501519092506200028f816200022d565b809150509250925092565b600060208284031215620002ad57600080fd5b8151620002ba816200022d565b9392505050565b60805160a05160c05160e05161010051612b7e62000329600039600081816101e701526106c4015260006102ec015260008181610182015261098501526000818161025a01528181610f8401526111250152600081816102810152610de20152612b7e6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80635c975abb116100ad578063886f119511610071578063886f1195146102cc5780638da5cb5b146102df578063b1344271146102e7578063f2fde38b1461030e578063fabc1cbc1461032157600080fd5b80635c975abb1461024457806368304835146102555780636d14a9871461027c5780636efb4636146102a3578063715018a6146102c457600080fd5b806338c8ee64116100f457806338c8ee64146101bc578063485cc955146101cf5780634a756847146101e2578063595c6a67146102095780635ac86ab71461021157600080fd5b806310d67a2f14610126578063136439dd1461013b578063171f1d5b1461014e5780633561deb11461017d575b600080fd5b610139610134366004612249565b610334565b005b61013961014936600461226d565b6103f0565b61016161015c3660046123da565b61052f565b6040805192151583529015156020830152015b60405180910390f35b6101a47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610174565b6101396101ca366004612249565b6106b9565b6101396101dd36600461242b565b610768565b6101a47f000000000000000000000000000000000000000000000000000000000000000081565b610139610887565b61023461021f366004612464565b606654600160ff9092169190911b9081161490565b6040519015158152602001610174565b606654604051908152602001610174565b6101a47f000000000000000000000000000000000000000000000000000000000000000081565b6101a47f000000000000000000000000000000000000000000000000000000000000000081565b6102b66102b1366004612748565b61094e565b60405161017492919061283d565b6101396113b8565b6065546101a4906001600160a01b031681565b6101a46113cc565b6101a47f000000000000000000000000000000000000000000000000000000000000000081565b61013961031c366004612249565b6113e5565b61013961032f36600461226d565b61145b565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab9190612886565b6001600160a01b0316336001600160a01b0316146103e45760405162461bcd60e51b81526004016103db906128a3565b60405180910390fd5b6103ed816115b7565b50565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045c91906128ed565b6104785760405162461bcd60e51b81526004016103db9061290f565b606654818116146104f15760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016103db565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b60008060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018787600001518860200151886000015160006002811061057757610577612957565b60200201518951600160200201518a6020015160006002811061059c5761059c612957565b60200201518b602001516001600281106105b8576105b8612957565b602090810291909101518c518d8301516040516106159a99989796959401988952602089019790975260408801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200190565b6040516020818303038152906040528051906020012060001c610638919061296d565b90506106ab61065161064a88846116ae565b869061173f565b6106596117d4565b6106a16106928561068c604080518082018252600080825260209182015281518083019092526001825260029082015290565b906116ae565b61069b8c611894565b9061173f565b886201d4c0611923565b909890975095505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103ed5760405162461bcd60e51b815260206004820152604860248201527f6f6e6c79496e6372656469626c654c656e64696e675461736b4d616e6167657260448201527f3a206e6f742066726f6d206372656469626c65206c656e64696e67207461736b6064820152671036b0b730b3b2b960c11b608482015260a4016103db565b600054610100900460ff16158080156107885750600054600160ff909116105b806107a25750303b1580156107a2575060005460ff166001145b6108055760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103db565b6000805460ff191660011790558015610828576000805461ff0019166101001790555b610833836000611b3d565b61083c82611c27565b8015610882576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa1580156108cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f391906128ed565b61090f5760405162461bcd60e51b81526004016103db9061290f565b600019606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b60408051808201909152606080825260208201526040805180820190915260008082526020820181905290815b86811015610b6f577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c1af6b248989848181106109c4576109c4612957565b9050013560f81c60f81b60f81c888860a0015185815181106109e8576109e8612957565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa158015610a44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a68919061298f565b67ffffffffffffffff1916610a9986604001518381518110610a8c57610a8c612957565b6020026020010151611c79565b67ffffffffffffffff191614610b355760405162461bcd60e51b81526020600482015260616024820152600080516020612b2983398151915260448201527f7265733a2071756f72756d41706b206861736820696e2073746f72616765206460648201527f6f6573206e6f74206d617463682070726f76696465642071756f72756d2061706084820152606b60f81b60a482015260c4016103db565b610b6585604001518281518110610b4e57610b4e612957565b60200260200101518361173f90919063ffffffff16565b915060010161097b565b5060408051808201909152606080825260208201528667ffffffffffffffff811115610b9d57610b9d612286565b604051908082528060200260200182016040528015610bc6578160200160208202803683370190505b5060208201528667ffffffffffffffff811115610be557610be5612286565b604051908082528060200260200182016040528015610c0e578160200160208202803683370190505b50815260208501515160009067ffffffffffffffff811115610c3257610c32612286565b604051908082528060200260200182016040528015610c5b578160200160208202803683370190505b509050600086602001515167ffffffffffffffff811115610c7e57610c7e612286565b604051908082528060200260200182016040528015610ca7578160200160208202803683370190505b5090506000610ceb8b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611cbc92505050565b905060005b886020015151811015610f4c57610d1689602001518281518110610a8c57610a8c612957565b848281518110610d2857610d28612957565b60209081029190910101528015610de05783610d456001836129d0565b81518110610d5557610d55612957565b602002602001015160001c848281518110610d7257610d72612957565b602002602001015160001c11610de0576040805162461bcd60e51b8152602060048201526024810191909152600080516020612b2983398151915260448201527f7265733a206e6f6e5369676e65725075626b657973206e6f7420736f7274656460648201526084016103db565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633064620d858381518110610e2157610e21612957565b60200260200101518c8c600001518581518110610e4057610e40612957565b60200260200101516040518463ffffffff1660e01b8152600401610e7d9392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa158015610e9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebe91906129e3565b6001600160c01b0316838281518110610ed957610ed9612957565b602002602001018181525050610f42610f3b610f0f84868581518110610f0157610f01612957565b602002602001015116611e20565b610f358c602001518581518110610f2857610f28612957565b6020026020010151611e51565b90611eec565b879061173f565b9550600101610cf0565b505060005b60ff81168a111561128c5760008b8b8360ff16818110610f7357610f73612957565b9050013560f81c60f81b60f81c90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c8294c56828c8c60c001518660ff1681518110610fcc57610fcc612957565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa158015611028573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104c9190612a0c565b85602001518360ff168151811061106557611065612957565b6001600160601b03909216602092830291909101820152850151805160ff841690811061109457611094612957565b602002602001015185600001518360ff16815181106110b5576110b5612957565b60200260200101906001600160601b031690816001600160601b03168152505060005b8960200151518163ffffffff16101561128257600061111e858363ffffffff168151811061110857611108612957565b60200260200101518460ff161c60019081161490565b1561126f577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a43cde89848e898663ffffffff168151811061116c5761116c612957565b60200260200101518f60e001518960ff168151811061118d5761118d612957565b60200260200101518663ffffffff16815181106111ac576111ac612957565b60209081029190910101516040516001600160e01b031960e087901b16815260ff909416600485015263ffffffff92831660248501526044840191909152166064820152608401602060405180830381865afa158015611210573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112349190612a0c565b8751805160ff871690811061124b5761124b612957565b6020026020010181815161125f9190612a35565b6001600160601b03169052506001015b508061127a81612a5c565b9150506110d8565b5050600101610f51565b50506000806112a58c868a606001518b6080015161052f565b91509150816113165760405162461bcd60e51b81526020600482015260436024820152600080516020612b2983398151915260448201527f7265733a2070616972696e6720707265636f6d70696c652063616c6c206661696064820152621b195960ea1b608482015260a4016103db565b806113775760405162461bcd60e51b81526020600482015260396024820152600080516020612b2983398151915260448201527f7265733a207369676e617475726520697320696e76616c69640000000000000060648201526084016103db565b50506000878260405160200161138e929190612a7f565b60408051808303601f190181529190528051602090910120929b929a509198505050505050505050565b6113c0611fd0565b6113ca6000611c27565b565b60006113e06033546001600160a01b031690565b905090565b6113ed611fd0565b6001600160a01b0381166114525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103db565b6103ed81611c27565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d29190612886565b6001600160a01b0316336001600160a01b0316146115025760405162461bcd60e51b81526004016103db906128a3565b6066541981196066541916146115805760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016103db565b606681905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610524565b6001600160a01b0381166116455760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a4016103db565b606554604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b60408051808201909152600080825260208201526116ca61215a565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa905080806116f957fe5b50806117375760405162461bcd60e51b815260206004820152600d60248201526c1958cb5b5d5b0b59985a5b1959609a1b60448201526064016103db565b505092915050565b604080518082019091526000808252602082015261175b612178565b835181526020808501518183015283516040808401919091529084015160608301526000908360808460066107d05a03fa9050808061179657fe5b50806117375760405162461bcd60e51b815260206004820152600d60248201526c1958cb5859190b59985a5b1959609a1b60448201526064016103db565b6117dc612196565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b6040805180820190915260008082526020820152600080806118c4600080516020612b098339815191528661296d565b90505b6118d08161202f565b9093509150600080516020612b098339815191528283098303611909576040805180820190915290815260208101919091529392505050565b600080516020612b098339815191526001820890506118c7565b6040805180820182528681526020808201869052825180840190935286835282018490526000918291906119556121bb565b60005b6002811015611b1057600061196e826006612ac7565b905084826002811061198257611982612957565b60200201515183611994836000612ade565b600c81106119a4576119a4612957565b60200201528482600281106119bb576119bb612957565b602002015160200151838260016119d29190612ade565b600c81106119e2576119e2612957565b60200201528382600281106119f9576119f9612957565b6020020151515183611a0c836002612ade565b600c8110611a1c57611a1c612957565b6020020152838260028110611a3357611a33612957565b6020020151516001602002015183611a4c836003612ade565b600c8110611a5c57611a5c612957565b6020020152838260028110611a7357611a73612957565b602002015160200151600060028110611a8e57611a8e612957565b602002015183611a9f836004612ade565b600c8110611aaf57611aaf612957565b6020020152838260028110611ac657611ac6612957565b602002015160200151600160028110611ae157611ae1612957565b602002015183611af2836005612ade565b600c8110611b0257611b02612957565b602002015250600101611958565b50611b196121da565b60006020826101808560088cfa9151919c9115159b50909950505050505050505050565b6065546001600160a01b0316158015611b5e57506001600160a01b03821615155b611be05760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016103db565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2611c23826115b7565b5050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081600001518260200151604051602001611c9f929190918252602082015260400190565b604051602081830303815290604052805190602001209050919050565b600061010082511115611d305760405162461bcd60e51b815260206004820152603660248201527f4269746d61705574696c732e62797465734172726179546f4269746d61703a206044820152756279746573417272617920697320746f6f206c6f6e6760501b60648201526084016103db565b8151600003611d4157506000919050565b60008083600081518110611d5757611d57612957565b0160200151600160f89190911c81901b92505b8451811015611e1757848181518110611d8557611d85612957565b0160200151600160f89190911c1b915082821615611e0b5760405162461bcd60e51b815260206004820152603a60248201527f4269746d61705574696c732e62797465734172726179546f4269746d61703a2060448201527f72657065617420656e74727920696e206279746573417272617900000000000060648201526084016103db565b91811791600101611d6a565b50909392505050565b6000805b8215611e4b57611e356001846129d0565b9092169180611e4381612af1565b915050611e24565b92915050565b60408051808201909152600080825260208201528151158015611e7657506020820151155b15611e94575050604080518082019091526000808252602082015290565b604051806040016040528083600001518152602001600080516020612b098339815191528460200151611ec7919061296d565b611edf90600080516020612b098339815191526129d0565b905292915050565b919050565b60408051808201909152600080825260208201526102008261ffff1610611f485760405162461bcd60e51b815260206004820152601060248201526f7363616c61722d746f6f2d6c6172676560801b60448201526064016103db565b8161ffff16600103611f5b575081611e4b565b6040805180820190915260008082526020820181905284906001905b8161ffff168661ffff161115611fc557600161ffff871660ff83161c81169003611fa857611fa5848461173f565b93505b611fb2838461173f565b92506201fffe600192831b169101611f77565b509195945050505050565b33611fd96113cc565b6001600160a01b0316146113ca5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103db565b60008080600080516020612b098339815191526003600080516020612b0983398151915286600080516020612b098339815191528889090908905060006120a5827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52600080516020612b098339815191526120b1565b91959194509092505050565b6000806120bc6121da565b6120c46121f8565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa9250828061210157fe5b508261214f5760405162461bcd60e51b815260206004820152601a60248201527f424e3235342e6578704d6f643a2063616c6c206661696c75726500000000000060448201526064016103db565b505195945050505050565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180604001604052806121a9612216565b81526020016121b6612216565b905290565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b03811681146103ed57600080fd5b60006020828403121561225b57600080fd5b813561226681612234565b9392505050565b60006020828403121561227f57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156122bf576122bf612286565b60405290565b604051610100810167ffffffffffffffff811182821017156122bf576122bf612286565b604051601f8201601f1916810167ffffffffffffffff8111828210171561231257612312612286565b604052919050565b60006040828403121561232c57600080fd5b61233461229c565b9050813581526020820135602082015292915050565b600082601f83011261235b57600080fd5b61236361229c565b80604084018581111561237557600080fd5b845b8181101561238f578035845260209384019301612377565b509095945050505050565b6000608082840312156123ac57600080fd5b6123b461229c565b90506123c0838361234a565b81526123cf836040840161234a565b602082015292915050565b60008060008061012085870312156123f157600080fd5b84359350612402866020870161231a565b9250612411866060870161239a565b91506124208660e0870161231a565b905092959194509250565b6000806040838503121561243e57600080fd5b823561244981612234565b9150602083013561245981612234565b809150509250929050565b60006020828403121561247657600080fd5b813560ff8116811461226657600080fd5b803563ffffffff81168114611ee757600080fd5b600067ffffffffffffffff8211156124b5576124b5612286565b5060051b60200190565b600082601f8301126124d057600080fd5b813560206124e56124e08361249b565b6122e9565b8083825260208201915060208460051b87010193508684111561250757600080fd5b602086015b8481101561252a5761251d81612487565b835291830191830161250c565b509695505050505050565b600082601f83011261254657600080fd5b813560206125566124e08361249b565b8083825260208201915060208460061b87010193508684111561257857600080fd5b602086015b8481101561252a5761258f888261231a565b83529183019160400161257d565b600082601f8301126125ae57600080fd5b813560206125be6124e08361249b565b82815260059290921b840181019181810190868411156125dd57600080fd5b8286015b8481101561252a57803567ffffffffffffffff8111156126015760008081fd5b61260f8986838b01016124bf565b8452509183019183016125e1565b6000610180828403121561263057600080fd5b6126386122c5565b9050813567ffffffffffffffff8082111561265257600080fd5b61265e858386016124bf565b8352602084013591508082111561267457600080fd5b61268085838601612535565b6020840152604084013591508082111561269957600080fd5b6126a585838601612535565b60408401526126b7856060860161239a565b60608401526126c98560e0860161231a565b60808401526101208401359150808211156126e357600080fd5b6126ef858386016124bf565b60a084015261014084013591508082111561270957600080fd5b612715858386016124bf565b60c084015261016084013591508082111561272f57600080fd5b5061273c8482850161259d565b60e08301525092915050565b60008060008060006080868803121561276057600080fd5b85359450602086013567ffffffffffffffff8082111561277f57600080fd5b818801915088601f83011261279357600080fd5b8135818111156127a257600080fd5b8960208285010111156127b457600080fd5b60208301965094506127c860408901612487565b935060608801359150808211156127de57600080fd5b506127eb8882890161261d565b9150509295509295909350565b60008151808452602080850194506020840160005b838110156128325781516001600160601b03168752958201959082019060010161280d565b509495945050505050565b604081526000835160408084015261285860808401826127f8565b90506020850151603f1984830301606085015261287582826127f8565b925050508260208301529392505050565b60006020828403121561289857600080fd5b815161226681612234565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b6000602082840312156128ff57600080fd5b8151801515811461226657600080fd5b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60008261298a57634e487b7160e01b600052601260045260246000fd5b500690565b6000602082840312156129a157600080fd5b815167ffffffffffffffff198116811461226657600080fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115611e4b57611e4b6129ba565b6000602082840312156129f557600080fd5b81516001600160c01b038116811461226657600080fd5b600060208284031215612a1e57600080fd5b81516001600160601b038116811461226657600080fd5b6001600160601b03828116828216039080821115612a5557612a556129ba565b5092915050565b600063ffffffff808316818103612a7557612a756129ba565b6001019392505050565b63ffffffff60e01b8360e01b1681526000600482018351602080860160005b83811015612aba57815185529382019390820190600101612a9e565b5092979650505050505050565b8082028115828204841417611e4b57611e4b6129ba565b80820180821115611e4b57611e4b6129ba565b600061ffff808316818103612a7557612a756129ba56fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47424c535369676e6174757265436865636b65722e636865636b5369676e617475a26469706673582212204a96d109161326f232e40dcc1458702289a2ad7516953e626c04e1d594809d3564736f6c63430008160033",
}

// ContractIncredibleLendingServiceManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractIncredibleLendingServiceManagerMetaData.ABI instead.
var ContractIncredibleLendingServiceManagerABI = ContractIncredibleLendingServiceManagerMetaData.ABI

// ContractIncredibleLendingServiceManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractIncredibleLendingServiceManagerMetaData.Bin instead.
var ContractIncredibleLendingServiceManagerBin = ContractIncredibleLendingServiceManagerMetaData.Bin

// DeployContractIncredibleLendingServiceManager deploys a new Ethereum contract, binding an instance of ContractIncredibleLendingServiceManager to it.
func DeployContractIncredibleLendingServiceManager(auth *bind.TransactOpts, backend bind.ContractBackend, _registryCoordinator common.Address, _slasher common.Address, _incredibleLendingTaskManager common.Address) (common.Address, *types.Transaction, *ContractIncredibleLendingServiceManager, error) {
	parsed, err := ContractIncredibleLendingServiceManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractIncredibleLendingServiceManagerBin), backend, _registryCoordinator, _slasher, _incredibleLendingTaskManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractIncredibleLendingServiceManager{ContractIncredibleLendingServiceManagerCaller: ContractIncredibleLendingServiceManagerCaller{contract: contract}, ContractIncredibleLendingServiceManagerTransactor: ContractIncredibleLendingServiceManagerTransactor{contract: contract}, ContractIncredibleLendingServiceManagerFilterer: ContractIncredibleLendingServiceManagerFilterer{contract: contract}}, nil
}

// ContractIncredibleLendingServiceManager is an auto generated Go binding around an Ethereum contract.
type ContractIncredibleLendingServiceManager struct {
	ContractIncredibleLendingServiceManagerCaller     // Read-only binding to the contract
	ContractIncredibleLendingServiceManagerTransactor // Write-only binding to the contract
	ContractIncredibleLendingServiceManagerFilterer   // Log filterer for contract events
}

// ContractIncredibleLendingServiceManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractIncredibleLendingServiceManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractIncredibleLendingServiceManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractIncredibleLendingServiceManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractIncredibleLendingServiceManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractIncredibleLendingServiceManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractIncredibleLendingServiceManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractIncredibleLendingServiceManagerSession struct {
	Contract     *ContractIncredibleLendingServiceManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts                            // Call options to use throughout this session
	TransactOpts bind.TransactOpts                        // Transaction auth options to use throughout this session
}

// ContractIncredibleLendingServiceManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractIncredibleLendingServiceManagerCallerSession struct {
	Contract *ContractIncredibleLendingServiceManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                                  // Call options to use throughout this session
}

// ContractIncredibleLendingServiceManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractIncredibleLendingServiceManagerTransactorSession struct {
	Contract     *ContractIncredibleLendingServiceManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                                  // Transaction auth options to use throughout this session
}

// ContractIncredibleLendingServiceManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractIncredibleLendingServiceManagerRaw struct {
	Contract *ContractIncredibleLendingServiceManager // Generic contract binding to access the raw methods on
}

// ContractIncredibleLendingServiceManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractIncredibleLendingServiceManagerCallerRaw struct {
	Contract *ContractIncredibleLendingServiceManagerCaller // Generic read-only contract binding to access the raw methods on
}

// ContractIncredibleLendingServiceManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractIncredibleLendingServiceManagerTransactorRaw struct {
	Contract *ContractIncredibleLendingServiceManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractIncredibleLendingServiceManager creates a new instance of ContractIncredibleLendingServiceManager, bound to a specific deployed contract.
func NewContractIncredibleLendingServiceManager(address common.Address, backend bind.ContractBackend) (*ContractIncredibleLendingServiceManager, error) {
	contract, err := bindContractIncredibleLendingServiceManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractIncredibleLendingServiceManager{ContractIncredibleLendingServiceManagerCaller: ContractIncredibleLendingServiceManagerCaller{contract: contract}, ContractIncredibleLendingServiceManagerTransactor: ContractIncredibleLendingServiceManagerTransactor{contract: contract}, ContractIncredibleLendingServiceManagerFilterer: ContractIncredibleLendingServiceManagerFilterer{contract: contract}}, nil
}

// NewContractIncredibleLendingServiceManagerCaller creates a new read-only instance of ContractIncredibleLendingServiceManager, bound to a specific deployed contract.
func NewContractIncredibleLendingServiceManagerCaller(address common.Address, caller bind.ContractCaller) (*ContractIncredibleLendingServiceManagerCaller, error) {
	contract, err := bindContractIncredibleLendingServiceManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractIncredibleLendingServiceManagerCaller{contract: contract}, nil
}

// NewContractIncredibleLendingServiceManagerTransactor creates a new write-only instance of ContractIncredibleLendingServiceManager, bound to a specific deployed contract.
func NewContractIncredibleLendingServiceManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractIncredibleLendingServiceManagerTransactor, error) {
	contract, err := bindContractIncredibleLendingServiceManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractIncredibleLendingServiceManagerTransactor{contract: contract}, nil
}

// NewContractIncredibleLendingServiceManagerFilterer creates a new log filterer instance of ContractIncredibleLendingServiceManager, bound to a specific deployed contract.
func NewContractIncredibleLendingServiceManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractIncredibleLendingServiceManagerFilterer, error) {
	contract, err := bindContractIncredibleLendingServiceManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractIncredibleLendingServiceManagerFilterer{contract: contract}, nil
}

// bindContractIncredibleLendingServiceManager binds a generic wrapper to an already deployed contract.
func bindContractIncredibleLendingServiceManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractIncredibleLendingServiceManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractIncredibleLendingServiceManager.Contract.ContractIncredibleLendingServiceManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.ContractIncredibleLendingServiceManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.ContractIncredibleLendingServiceManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractIncredibleLendingServiceManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.contract.Transact(opts, method, params...)
}

// BlsPubkeyRegistry is a free data retrieval call binding the contract method 0x3561deb1.
//
// Solidity: function blsPubkeyRegistry() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCaller) BlsPubkeyRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractIncredibleLendingServiceManager.contract.Call(opts, &out, "blsPubkeyRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// BlsPubkeyRegistry is a free data retrieval call binding the contract method 0x3561deb1.
//
// Solidity: function blsPubkeyRegistry() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) BlsPubkeyRegistry() (common.Address, error) {
	return _ContractIncredibleLendingServiceManager.Contract.BlsPubkeyRegistry(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// BlsPubkeyRegistry is a free data retrieval call binding the contract method 0x3561deb1.
//
// Solidity: function blsPubkeyRegistry() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCallerSession) BlsPubkeyRegistry() (common.Address, error) {
	return _ContractIncredibleLendingServiceManager.Contract.BlsPubkeyRegistry(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) view returns((uint96[],uint96[]), bytes32)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCaller) CheckSignatures(opts *bind.CallOpts, msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	var out []interface{}
	err := _ContractIncredibleLendingServiceManager.contract.Call(opts, &out, "checkSignatures", msgHash, quorumNumbers, referenceBlockNumber, nonSignerStakesAndSignature)

	if err != nil {
		return *new(IBLSSignatureCheckerQuorumStakeTotals), *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(IBLSSignatureCheckerQuorumStakeTotals)).(*IBLSSignatureCheckerQuorumStakeTotals)
	out1 := *abi.ConvertType(out[1], new([32]byte)).(*[32]byte)

	return out0, out1, err

}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) view returns((uint96[],uint96[]), bytes32)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractIncredibleLendingServiceManager.Contract.CheckSignatures(&_ContractIncredibleLendingServiceManager.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, nonSignerStakesAndSignature)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) view returns((uint96[],uint96[]), bytes32)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCallerSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractIncredibleLendingServiceManager.Contract.CheckSignatures(&_ContractIncredibleLendingServiceManager.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, nonSignerStakesAndSignature)
}

// IncredibleLendingTaskManager is a free data retrieval call binding the contract method 0x4a756847.
//
// Solidity: function incredibleLendingTaskManager() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCaller) IncredibleLendingTaskManager(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractIncredibleLendingServiceManager.contract.Call(opts, &out, "incredibleLendingTaskManager")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// IncredibleLendingTaskManager is a free data retrieval call binding the contract method 0x4a756847.
//
// Solidity: function incredibleLendingTaskManager() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) IncredibleLendingTaskManager() (common.Address, error) {
	return _ContractIncredibleLendingServiceManager.Contract.IncredibleLendingTaskManager(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// IncredibleLendingTaskManager is a free data retrieval call binding the contract method 0x4a756847.
//
// Solidity: function incredibleLendingTaskManager() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCallerSession) IncredibleLendingTaskManager() (common.Address, error) {
	return _ContractIncredibleLendingServiceManager.Contract.IncredibleLendingTaskManager(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractIncredibleLendingServiceManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) Owner() (common.Address, error) {
	return _ContractIncredibleLendingServiceManager.Contract.Owner(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCallerSession) Owner() (common.Address, error) {
	return _ContractIncredibleLendingServiceManager.Contract.Owner(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCaller) Paused(opts *bind.CallOpts, index uint8) (bool, error) {
	var out []interface{}
	err := _ContractIncredibleLendingServiceManager.contract.Call(opts, &out, "paused", index)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) Paused(index uint8) (bool, error) {
	return _ContractIncredibleLendingServiceManager.Contract.Paused(&_ContractIncredibleLendingServiceManager.CallOpts, index)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCallerSession) Paused(index uint8) (bool, error) {
	return _ContractIncredibleLendingServiceManager.Contract.Paused(&_ContractIncredibleLendingServiceManager.CallOpts, index)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCaller) Paused0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractIncredibleLendingServiceManager.contract.Call(opts, &out, "paused0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) Paused0() (*big.Int, error) {
	return _ContractIncredibleLendingServiceManager.Contract.Paused0(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCallerSession) Paused0() (*big.Int, error) {
	return _ContractIncredibleLendingServiceManager.Contract.Paused0(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCaller) PauserRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractIncredibleLendingServiceManager.contract.Call(opts, &out, "pauserRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) PauserRegistry() (common.Address, error) {
	return _ContractIncredibleLendingServiceManager.Contract.PauserRegistry(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCallerSession) PauserRegistry() (common.Address, error) {
	return _ContractIncredibleLendingServiceManager.Contract.PauserRegistry(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCaller) RegistryCoordinator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractIncredibleLendingServiceManager.contract.Call(opts, &out, "registryCoordinator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) RegistryCoordinator() (common.Address, error) {
	return _ContractIncredibleLendingServiceManager.Contract.RegistryCoordinator(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCallerSession) RegistryCoordinator() (common.Address, error) {
	return _ContractIncredibleLendingServiceManager.Contract.RegistryCoordinator(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// Slasher is a free data retrieval call binding the contract method 0xb1344271.
//
// Solidity: function slasher() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCaller) Slasher(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractIncredibleLendingServiceManager.contract.Call(opts, &out, "slasher")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Slasher is a free data retrieval call binding the contract method 0xb1344271.
//
// Solidity: function slasher() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) Slasher() (common.Address, error) {
	return _ContractIncredibleLendingServiceManager.Contract.Slasher(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// Slasher is a free data retrieval call binding the contract method 0xb1344271.
//
// Solidity: function slasher() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCallerSession) Slasher() (common.Address, error) {
	return _ContractIncredibleLendingServiceManager.Contract.Slasher(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCaller) StakeRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractIncredibleLendingServiceManager.contract.Call(opts, &out, "stakeRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) StakeRegistry() (common.Address, error) {
	return _ContractIncredibleLendingServiceManager.Contract.StakeRegistry(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCallerSession) StakeRegistry() (common.Address, error) {
	return _ContractIncredibleLendingServiceManager.Contract.StakeRegistry(&_ContractIncredibleLendingServiceManager.CallOpts)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCaller) TrySignatureAndApkVerification(opts *bind.CallOpts, msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	var out []interface{}
	err := _ContractIncredibleLendingServiceManager.contract.Call(opts, &out, "trySignatureAndApkVerification", msgHash, apk, apkG2, sigma)

	outstruct := new(struct {
		PairingSuccessful bool
		SiganatureIsValid bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.PairingSuccessful = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.SiganatureIsValid = *abi.ConvertType(out[1], new(bool)).(*bool)

	return *outstruct, err

}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractIncredibleLendingServiceManager.Contract.TrySignatureAndApkVerification(&_ContractIncredibleLendingServiceManager.CallOpts, msgHash, apk, apkG2, sigma)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerCallerSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractIncredibleLendingServiceManager.Contract.TrySignatureAndApkVerification(&_ContractIncredibleLendingServiceManager.CallOpts, msgHash, apk, apkG2, sigma)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactor) FreezeOperator(opts *bind.TransactOpts, operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.contract.Transact(opts, "freezeOperator", operatorAddr)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) FreezeOperator(operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.FreezeOperator(&_ContractIncredibleLendingServiceManager.TransactOpts, operatorAddr)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactorSession) FreezeOperator(operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.FreezeOperator(&_ContractIncredibleLendingServiceManager.TransactOpts, operatorAddr)
}

// Initialize is a paid mutator transaction binding the contract method 0x485cc955.
//
// Solidity: function initialize(address _pauserRegistry, address initialOwner) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactor) Initialize(opts *bind.TransactOpts, _pauserRegistry common.Address, initialOwner common.Address) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.contract.Transact(opts, "initialize", _pauserRegistry, initialOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0x485cc955.
//
// Solidity: function initialize(address _pauserRegistry, address initialOwner) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) Initialize(_pauserRegistry common.Address, initialOwner common.Address) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.Initialize(&_ContractIncredibleLendingServiceManager.TransactOpts, _pauserRegistry, initialOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0x485cc955.
//
// Solidity: function initialize(address _pauserRegistry, address initialOwner) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactorSession) Initialize(_pauserRegistry common.Address, initialOwner common.Address) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.Initialize(&_ContractIncredibleLendingServiceManager.TransactOpts, _pauserRegistry, initialOwner)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactor) Pause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.contract.Transact(opts, "pause", newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.Pause(&_ContractIncredibleLendingServiceManager.TransactOpts, newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactorSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.Pause(&_ContractIncredibleLendingServiceManager.TransactOpts, newPausedStatus)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactor) PauseAll(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.contract.Transact(opts, "pauseAll")
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) PauseAll() (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.PauseAll(&_ContractIncredibleLendingServiceManager.TransactOpts)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactorSession) PauseAll() (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.PauseAll(&_ContractIncredibleLendingServiceManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.RenounceOwnership(&_ContractIncredibleLendingServiceManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.RenounceOwnership(&_ContractIncredibleLendingServiceManager.TransactOpts)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactor) SetPauserRegistry(opts *bind.TransactOpts, newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.contract.Transact(opts, "setPauserRegistry", newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.SetPauserRegistry(&_ContractIncredibleLendingServiceManager.TransactOpts, newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactorSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.SetPauserRegistry(&_ContractIncredibleLendingServiceManager.TransactOpts, newPauserRegistry)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.TransferOwnership(&_ContractIncredibleLendingServiceManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.TransferOwnership(&_ContractIncredibleLendingServiceManager.TransactOpts, newOwner)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactor) Unpause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.contract.Transact(opts, "unpause", newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.Unpause(&_ContractIncredibleLendingServiceManager.TransactOpts, newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerTransactorSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractIncredibleLendingServiceManager.Contract.Unpause(&_ContractIncredibleLendingServiceManager.TransactOpts, newPausedStatus)
}

// ContractIncredibleLendingServiceManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ContractIncredibleLendingServiceManager contract.
type ContractIncredibleLendingServiceManagerInitializedIterator struct {
	Event *ContractIncredibleLendingServiceManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractIncredibleLendingServiceManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractIncredibleLendingServiceManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractIncredibleLendingServiceManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractIncredibleLendingServiceManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractIncredibleLendingServiceManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractIncredibleLendingServiceManagerInitialized represents a Initialized event raised by the ContractIncredibleLendingServiceManager contract.
type ContractIncredibleLendingServiceManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractIncredibleLendingServiceManagerInitializedIterator, error) {

	logs, sub, err := _ContractIncredibleLendingServiceManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractIncredibleLendingServiceManagerInitializedIterator{contract: _ContractIncredibleLendingServiceManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractIncredibleLendingServiceManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _ContractIncredibleLendingServiceManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractIncredibleLendingServiceManagerInitialized)
				if err := _ContractIncredibleLendingServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerFilterer) ParseInitialized(log types.Log) (*ContractIncredibleLendingServiceManagerInitialized, error) {
	event := new(ContractIncredibleLendingServiceManagerInitialized)
	if err := _ContractIncredibleLendingServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractIncredibleLendingServiceManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractIncredibleLendingServiceManager contract.
type ContractIncredibleLendingServiceManagerOwnershipTransferredIterator struct {
	Event *ContractIncredibleLendingServiceManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractIncredibleLendingServiceManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractIncredibleLendingServiceManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractIncredibleLendingServiceManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractIncredibleLendingServiceManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractIncredibleLendingServiceManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractIncredibleLendingServiceManagerOwnershipTransferred represents a OwnershipTransferred event raised by the ContractIncredibleLendingServiceManager contract.
type ContractIncredibleLendingServiceManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractIncredibleLendingServiceManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractIncredibleLendingServiceManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractIncredibleLendingServiceManagerOwnershipTransferredIterator{contract: _ContractIncredibleLendingServiceManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractIncredibleLendingServiceManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractIncredibleLendingServiceManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractIncredibleLendingServiceManagerOwnershipTransferred)
				if err := _ContractIncredibleLendingServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerFilterer) ParseOwnershipTransferred(log types.Log) (*ContractIncredibleLendingServiceManagerOwnershipTransferred, error) {
	event := new(ContractIncredibleLendingServiceManagerOwnershipTransferred)
	if err := _ContractIncredibleLendingServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractIncredibleLendingServiceManagerPausedIterator is returned from FilterPaused and is used to iterate over the raw logs and unpacked data for Paused events raised by the ContractIncredibleLendingServiceManager contract.
type ContractIncredibleLendingServiceManagerPausedIterator struct {
	Event *ContractIncredibleLendingServiceManagerPaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractIncredibleLendingServiceManagerPausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractIncredibleLendingServiceManagerPaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractIncredibleLendingServiceManagerPaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractIncredibleLendingServiceManagerPausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractIncredibleLendingServiceManagerPausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractIncredibleLendingServiceManagerPaused represents a Paused event raised by the ContractIncredibleLendingServiceManager contract.
type ContractIncredibleLendingServiceManagerPaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterPaused is a free log retrieval operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerFilterer) FilterPaused(opts *bind.FilterOpts, account []common.Address) (*ContractIncredibleLendingServiceManagerPausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractIncredibleLendingServiceManager.contract.FilterLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractIncredibleLendingServiceManagerPausedIterator{contract: _ContractIncredibleLendingServiceManager.contract, event: "Paused", logs: logs, sub: sub}, nil
}

// WatchPaused is a free log subscription operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerFilterer) WatchPaused(opts *bind.WatchOpts, sink chan<- *ContractIncredibleLendingServiceManagerPaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractIncredibleLendingServiceManager.contract.WatchLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractIncredibleLendingServiceManagerPaused)
				if err := _ContractIncredibleLendingServiceManager.contract.UnpackLog(event, "Paused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePaused is a log parse operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerFilterer) ParsePaused(log types.Log) (*ContractIncredibleLendingServiceManagerPaused, error) {
	event := new(ContractIncredibleLendingServiceManagerPaused)
	if err := _ContractIncredibleLendingServiceManager.contract.UnpackLog(event, "Paused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractIncredibleLendingServiceManagerPauserRegistrySetIterator is returned from FilterPauserRegistrySet and is used to iterate over the raw logs and unpacked data for PauserRegistrySet events raised by the ContractIncredibleLendingServiceManager contract.
type ContractIncredibleLendingServiceManagerPauserRegistrySetIterator struct {
	Event *ContractIncredibleLendingServiceManagerPauserRegistrySet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractIncredibleLendingServiceManagerPauserRegistrySetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractIncredibleLendingServiceManagerPauserRegistrySet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractIncredibleLendingServiceManagerPauserRegistrySet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractIncredibleLendingServiceManagerPauserRegistrySetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractIncredibleLendingServiceManagerPauserRegistrySetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractIncredibleLendingServiceManagerPauserRegistrySet represents a PauserRegistrySet event raised by the ContractIncredibleLendingServiceManager contract.
type ContractIncredibleLendingServiceManagerPauserRegistrySet struct {
	PauserRegistry    common.Address
	NewPauserRegistry common.Address
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterPauserRegistrySet is a free log retrieval operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerFilterer) FilterPauserRegistrySet(opts *bind.FilterOpts) (*ContractIncredibleLendingServiceManagerPauserRegistrySetIterator, error) {

	logs, sub, err := _ContractIncredibleLendingServiceManager.contract.FilterLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return &ContractIncredibleLendingServiceManagerPauserRegistrySetIterator{contract: _ContractIncredibleLendingServiceManager.contract, event: "PauserRegistrySet", logs: logs, sub: sub}, nil
}

// WatchPauserRegistrySet is a free log subscription operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerFilterer) WatchPauserRegistrySet(opts *bind.WatchOpts, sink chan<- *ContractIncredibleLendingServiceManagerPauserRegistrySet) (event.Subscription, error) {

	logs, sub, err := _ContractIncredibleLendingServiceManager.contract.WatchLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractIncredibleLendingServiceManagerPauserRegistrySet)
				if err := _ContractIncredibleLendingServiceManager.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePauserRegistrySet is a log parse operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerFilterer) ParsePauserRegistrySet(log types.Log) (*ContractIncredibleLendingServiceManagerPauserRegistrySet, error) {
	event := new(ContractIncredibleLendingServiceManagerPauserRegistrySet)
	if err := _ContractIncredibleLendingServiceManager.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractIncredibleLendingServiceManagerUnpausedIterator is returned from FilterUnpaused and is used to iterate over the raw logs and unpacked data for Unpaused events raised by the ContractIncredibleLendingServiceManager contract.
type ContractIncredibleLendingServiceManagerUnpausedIterator struct {
	Event *ContractIncredibleLendingServiceManagerUnpaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractIncredibleLendingServiceManagerUnpausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractIncredibleLendingServiceManagerUnpaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractIncredibleLendingServiceManagerUnpaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractIncredibleLendingServiceManagerUnpausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractIncredibleLendingServiceManagerUnpausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractIncredibleLendingServiceManagerUnpaused represents a Unpaused event raised by the ContractIncredibleLendingServiceManager contract.
type ContractIncredibleLendingServiceManagerUnpaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterUnpaused is a free log retrieval operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerFilterer) FilterUnpaused(opts *bind.FilterOpts, account []common.Address) (*ContractIncredibleLendingServiceManagerUnpausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractIncredibleLendingServiceManager.contract.FilterLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractIncredibleLendingServiceManagerUnpausedIterator{contract: _ContractIncredibleLendingServiceManager.contract, event: "Unpaused", logs: logs, sub: sub}, nil
}

// WatchUnpaused is a free log subscription operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerFilterer) WatchUnpaused(opts *bind.WatchOpts, sink chan<- *ContractIncredibleLendingServiceManagerUnpaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractIncredibleLendingServiceManager.contract.WatchLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractIncredibleLendingServiceManagerUnpaused)
				if err := _ContractIncredibleLendingServiceManager.contract.UnpackLog(event, "Unpaused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnpaused is a log parse operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractIncredibleLendingServiceManager *ContractIncredibleLendingServiceManagerFilterer) ParseUnpaused(log types.Log) (*ContractIncredibleLendingServiceManagerUnpaused, error) {
	event := new(ContractIncredibleLendingServiceManagerUnpaused)
	if err := _ContractIncredibleLendingServiceManager.contract.UnpackLog(event, "Unpaused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
